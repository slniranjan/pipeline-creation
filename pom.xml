<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.5.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.niranjan.unittesting</groupId>
  <artifactId>unittest</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>unittest</name>
  <description>Unit test guide with Spring boot</description>

  <properties>
    <java.version>1.8</java.version>
    <!-- Used to locate the profile specific configuration file. -->
    <build.profile.id>utest</build.profile.id>
    <!-- Only unit tests are run by default. -->
    <skip.integration.tests>true</skip.integration.tests>
    <skip.unit.tests>true</skip.unit.tests>
    <maven-jacoco-plugin.exec-files-directory>${project.build.directory}/coverage-reports</maven-jacoco-plugin.exec-files-directory>
    <maven-jacoco-plugin.ut-exec-file>${maven-jacoco-plugin.exec-files-directory}/jacoco-ut.exec</maven-jacoco-plugin.ut-exec-file>
    <maven-jacoco-plugin.it-exec-file>${maven-jacoco-plugin.exec-files-directory}/jacoco-it.exec</maven-jacoco-plugin.it-exec-file>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
      <!--this will run unit test. bind to test phase-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <argLine>@{surefireArgLine}</argLine>
          <!-- Skips unit tests if the value of skip.unit.tests property is true -->
          <skipTests>${skip.unit.tests}</skipTests>
          <!-- Excludes integration tests when unit tests are run. -->
          <excludes>
            <exclude>**/*IT.java</exclude>
          </excludes>
        </configuration>
      </plugin>

    </plugins>
  </build>
  <profiles>
  <!-- Use this profile if need to run unit and integration test -->
    <!--<profile>
      <id>alltests</id>
      <properties>
        <build.profile.id>all-tests</build.profile.id>
        &lt;!&ndash; All tests are run. &ndash;&gt;
        <skip.integration.tests>false</skip.integration.tests>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
    </profile>-->
    <profile>
      <id>utest</id>
      <properties>
        <build.profile.id>unit-test</build.profile.id>
        <skip.unit.tests>false</skip.unit.tests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.2</version>
            <executions>
              <!--
          Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when Maven the Surefire plugin is executed.
          -->
              <execution>
                <id>pre-unit-test</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <destFile>${maven-jacoco-plugin.ut-exec-file}</destFile>
                  <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                  <propertyName>surefireArgLine</propertyName>
                <excludes>
                  <exclude>**/*IT.java</exclude>
                </excludes>
                </configuration>
              </execution>
              <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
              <execution>
                <id>post-unit-test</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${maven-jacoco-plugin.ut-exec-file}</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                </configuration>
              </execution>
              <!-- Ensure minimum code coverage for unit tests. -->
              <execution>
                <id>post-unit-test-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <dataFile>${maven-jacoco-plugin.ut-exec-file}</dataFile>
                  <rules>
                    <rule>
                      <element>CLASS</element>
                      <excludes>
                        <exclude>*UnittestApplication</exclude>
                      </excludes>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.80</minimum>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.50</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>itest</id>
      <properties>
        <!-- Used to locate the profile specific configuration file. -->
        <build.profile.id>integration-test</build.profile.id>
        <skip.integration.tests>false</skip.integration.tests>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.2</version>
            <executions>
              <!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM
            argument when Maven the Failsafe plugin is executed.
          -->
              <execution>
                <id>pre-integration-test</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <destFile>${maven-jacoco-plugin.it-exec-file}</destFile>
                  <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
<!--                  <propertyName>failsafeArgLine</propertyName>-->
                </configuration>
              </execution>
              <!-- Ensures that the code coverage report for integration tests after integration tests have been run.
              -->
              <execution>
                <id>post-integration-test</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <!-- Sets the path to the file which contains the execution data. -->
                  <dataFile>${maven-jacoco-plugin.it-exec-file}</dataFile>
                  <!-- Sets the output directory for the code coverage report. -->
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>
              <!--  Ensure minimum code coverage for integration tests. -->
              <execution>
                <id>post-integration-test-check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <dataFile>${maven-jacoco-plugin.it-exec-file}</dataFile>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.60</minimum>
                        </limit>
                        <limit>
                          <counter>BRANCH</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0.10</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!--this will run integration test. bind to verify phase-->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>3.0.0-M4</version>
            <executions>
              <!--
                Ensures that both integration-test and verify goals of the Failsafe Maven
                plugin are executed.
              -->
              <execution>
                <id>integration-tests</id>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <!-- Sets the VM argument line used when integration tests are run. -->
                  <!-- if enabled, integration test runs twice-->
<!--                   <argLine>@{failsafeArgLine}</argLine>-->
                  <!--
                      Skips integration tests if the value of skip.integration.tests property
                      is true
                  -->
                  <skipITs>${skip.integration.tests}</skipITs>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
